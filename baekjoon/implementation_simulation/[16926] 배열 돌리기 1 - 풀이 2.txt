import java.io.*;
import java.util.*;

public class Main {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());
		int r = Integer.parseInt(st.nextToken());
		int[][] arr = new int[n][m];
		
		for(int i = 0; i < n; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j = 0; j < m; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
        	// 전체 그룹의 개수
        	// - 배열의 행,열의 길이 중 최소값을 반으로 나눈 만큼 만들어짐
		int group_n = Math.min(n, m) / 2;
				
		// 1. r번의 회전 진행
		while(r-- > 0) {
			// 2. 각 그룹별로 이동 진행
			for(int g = 0; g < group_n; g++) {				
				// 그룹별 이동 시 시작 칸의 값은 지워지므로 시작 칸의 값 기록
				int start_value = arr[g][g];
				
				// 3. 상, 하, 좌, 우 위치의 칸 별로 이동
				// 상 위치의 칸 이동 (←)
				int row_end = n - g - 1;
				int col_end = m - g - 1;
				
				// 상 위치의 칸 이동 (←)
				for(int y = g; y < col_end; y++) {
					arr[g][y] = arr[g][y+1];
				}
				
				// 우 위치의 칸 이동 (↑)
				for(int x = g; x < row_end; x++) {
					arr[x][col_end] = arr[x+1][col_end];
				}

				// 하 위치의 칸 이동 (→)
				for(int y = col_end; y > g; y--) {
					arr[row_end][y] = arr[row_end][y-1];
				}
				
				// 좌 위치의 칸 이동 (↓)
				for(int x = row_end; x > g; x--) {
					arr[x][g] = arr[x-1][g];
				}
				
				// 4. 모든 이동 후  시작 칸이 이동해야 할 칸에 기록해 둔 시작 칸의 값을 넣어주기
				arr[g+1][g] = start_value;
			}
		} // while(r-- > 0)
		
		// 모든 회전 후 결과 출력
		StringBuilder sb = new StringBuilder();
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < m; j++) {
				sb.append(arr[i][j]).append(" ");
			}
			sb.append("\n");
		}
		System.out.println(sb);
	}
}