import java.io.*;
import java.util.*;

public class Main {
	// 전개도 번호 순서대로 주사위의 값 저장
	public static int[] dice = new int[6];
	public static int[][] map;
	// 동서북남
	public static int[] dx = {0, 0, -1, 1};
	public static int[] dy = {1, -1, 0, 0};

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder(); // 출력할 결과
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());
		int x = Integer.parseInt(st.nextToken());
		int y = Integer.parseInt(st.nextToken());
		int k = Integer.parseInt(st.nextToken());
		map = new int[n][m];
		
		for(int i = 0; i < n; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j = 0; j < m; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}

		st = new StringTokenizer(br.readLine());
		while(k-- > 0) {
			// 명령의 방향
			int d = Integer.parseInt(st.nextToken()) - 1;

			// 주사위 이동 후 위치
			int nx = x + dx[d];
			int ny = y + dy[d];

			// 지도 범위를 벗어나는 경우 무시
			if(nx < 0 || nx >= n || ny < 0 || ny >= m) continue;
			
			// 1. 주사위 굴리기
			// 주사위 이동
			x = nx;
			y = ny;
			
			// 굴린 방향에 따른 값 변경
			if(d == 0) { // 동
				int tmp = dice[3];
				dice[3] = dice[0];
				dice[0] = dice[2];
				dice[2] = dice[5];
				dice[5] = tmp;
			} 
			else if(d == 1) { // 서
				int tmp = dice[3];
				dice[3] = dice[5];
				dice[5] = dice[2];
				dice[2] = dice[0];
				dice[0] = tmp;
			}
			else if(d == 2) { // 북
				int tmp = dice[5];
				dice[5] = dice[4];
				dice[4] = dice[0];
				dice[0] = dice[1];
				dice[1] = tmp;
			}
			else if(d == 3) { // 남
				int tmp = dice[1];
				dice[1] = dice[0];
				dice[0] = dice[4];
				dice[4] = dice[5];
				dice[5] = tmp;
			}

			// 2. 이동 후 칸의 값 확인 후 값 변경
			// 2-1. 칸의 수가 0이면 주사위 바닥면의 수를 칸에 복사
			if(map[x][y] == 0)
				map[x][y] = dice[5];
			else {
				// 2-2. 0이 아닌 경우 칸의 수를 주사위 바닥면으로 복사
				dice[5] = map[x][y];
				map[x][y] = 0;
			}
			
			// 3. 주사위 윗 면의 수를 출력
			sb.append(dice[0]).append("\n");
		}
		
		System.out.println(sb);
	}
}