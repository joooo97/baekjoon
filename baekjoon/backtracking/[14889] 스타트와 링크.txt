import java.util.*;
import java.io.*;

public class Main {
	
	public static int n, ans = Integer.MAX_VALUE;
	public static int[][] arr;
	public static boolean[] team; // true는 스타트 팀, false는 링크 팀
	public static int[] start, link;
	
	public static void getDifference() {		
		int sum_s = 0; // 스타트 팀 능력치 합
		int sum_l = 0; // 링크 팀 능력치 합
		
		for(int i = 0; i < n/2; i++) {
			for(int j = 0; j < n/2; j++) {
				sum_s += arr[start[i]][start[j]];
				sum_l += arr[link[i]][link[j]];
			}
		}
		
		int diff = Math.abs(sum_s - sum_l);
		if(ans > diff) ans = diff;
	}
	
	public static void makeTeam() {
		int idx_s = 0;
		int idx_l = 0;
		
		for(int i = 0; i < n; i++) {
			if(team[i]) start[idx_s++] = i;
			else link[idx_l++] = i;
		}
	}
	
	// idx: 스타트 팀으로 선택할 팀원의 인덱스, cnt: 선택한 스타트 팀의 팀원 수
	public static void recur(int idx, int cnt) {
		if(cnt == n/2) {
			makeTeam(); // 팀 나누기
			getDifference(); // 능력치 차이 구하기
			return;
		}
		
		if(idx >= n) return;
		
		// idx번째 팀원을 스타트 팀으로 선택
		team[idx] = true;
		recur(idx + 1, cnt + 1);
		
		// idx번째 팀원을 스타트 팀으로 선택하지 않음
		team[idx] = false;
		recur(idx + 1, cnt);
	}
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		arr = new int[n][n];
		team = new boolean[n];
		start = new int[n/2];
		link = new int[n/2];
		
		StringTokenizer st = null;
		for(int i = 0; i < n; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j = 0; j < n; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		recur(0, 0);
		System.out.println(ans);
	}
}