import java.util.*;
import java.io.*;

public class Main {
	
	public static void main(String args[]) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		// 모든 소수 구하기
		ArrayList<Integer> primeList = new ArrayList<>();
		boolean[] check = new boolean[1000001];
		check[0] = check[1] = true; // 소수가 아님
		
		for(int i = 2; i <= 1000000; i++) {
			if(check[i]) continue;
			
			// 소수 담기
			primeList.add(i);
			
			for(int j = i * 2; j <= 1000000; j += i) {
				check[j] = true;
			}
		}
		
		while(true) {
			int n = Integer.parseInt(br.readLine());
			if(n == 0) break;
			
			boolean ok = false;
			for(int i = 1; i < primeList.size(); i++) {
				int prime = primeList.get(i);
				
				if(!check[n - prime]) {
					System.out.println(n + " = " + prime + " + " + (n-prime));
					ok = true;
					break;
				}
			}
			
			if(!ok) System.out.println("Goldbach's conjecture is wrong.");
		}
		
 	}
}