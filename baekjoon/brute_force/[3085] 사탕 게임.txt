import java.util.*;

public class Main {
	
	public static int check(char[][] board, int start_row, int end_row, int start_col, int end_col) {
		int res = 0;
		int n = board.length;
		
		// 가로로 연속된 사탕 개수
		for(int i = start_row; i <= end_row; i++) {
			int cnt = 1;
			for(int j = 0; j < n-1; j++) {
				if(board[i][j] == board[i][j+1]) cnt += 1;
				else cnt = 1;
				
				if(cnt > res) res = cnt;
			}
		}
		
		// 세로로 연속된 사탕 개수
		for(int i = start_col; i <= end_col; i++) {
			int cnt = 1;
			for(int j = 0; j < n-1; j++) {
				if(board[j][i] == board[j+1][i]) cnt += 1;
				else cnt = 1;
				
				if(cnt > res) res = cnt;
			}
		}
		
		return res;
	}
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        char[][] board = new char[n][n];
        for(int i = 0; i < n; i++) {
        	board[i] = sc.next().toCharArray();
        }
        
        int ans = 0;
        // 인접한 두 칸의 사탕 교환
        for(int i = 0; i < n; i++) {
        	for(int j = 0; j < n; j++) {
        		// 현재 칸과 오른쪽 칸 교환
        		if(j + 1 < n) {
        			char temp = board[i][j];
        			board[i][j] = board[i][j+1];
        			board[i][j+1] = temp;
        			
        			int cnt = check(board, i, i, j, j+1);
        			if(cnt > ans) ans = cnt;
        			
        			temp = board[i][j];
        			board[i][j] = board[i][j+1];
        			board[i][j+1] = temp;
        		}
        		
        		// 현재 칸과 아래쪽 칸 교환
        		if(i + 1 < n) {
        			char temp = board[i][j];
        			board[i][j] = board[i+1][j];
        			board[i+1][j] = temp;
        			
        			int cnt = check(board, i, i+1, j, j);
        			if(cnt > ans) ans = cnt;
        			
        			temp = board[i][j];
        			board[i][j] = board[i+1][j];
        			board[i+1][j] = temp;
        		}
        	}
         }
        
        System.out.println(ans);
    }
}