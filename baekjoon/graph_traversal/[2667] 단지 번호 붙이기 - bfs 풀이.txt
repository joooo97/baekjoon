import java.util.*;
import java.io.*;

class Node {
	private int x;
	private int y;
	
	Node(int x, int y) {
		this.x = x;
		this.y = y;
	}
	
	public int getX() {
		return this.x;
	}
	
	public int getY() {
		return this.y;
	}
	
}

// 단지 수, 단지별 집 수(오름차순)
public class Main {
	public static int n;
	public static int[][] map;
	public static int[][] group;
	public static int[] dx = {-1, 1, 0, 0};
	public static int[] dy = {0, 0, -1, 1};

	public static void bfs(int sx, int sy, int s_idx) {
		Queue<Node> q = new LinkedList<>();
		q.offer(new Node(sx, sy));
		group[sx][sy] = s_idx;
		
		while(!q.isEmpty()) {
			Node now = q.poll();
			int x = now.getX();
			int y = now.getY();
			
			for(int i = 0; i < 4; i++) {
				int nx = x + dx[i];
				int ny = y + dy[i];
				
				if(nx < 0 || nx >= n || ny < 0 || ny >= n) continue;
				
				if(map[nx][ny] == 1 && group[nx][ny] == 0) {
					q.offer(new Node(nx, ny));
					group[nx][ny] = group[x][y];
				}
			}
		}
	}
 
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		map = new int[n][n];
		group = new int[n][n];
		
		for(int i = 0; i < n; i++) {
			String line = br.readLine();
			for(int j = 0; j < n; j++) {
				map[i][j] = line.charAt(j) - '0';
			}
		}
		
		int group_idx = 0; // 총 단지 수
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				if(map[i][j] == 1 && group[i][j] == 0) bfs(i, j, ++group_idx);
			}
		}
		
		// 각 단지별 집의 수
		int[] group_cnt = new int[group_idx];
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				int g_idx = group[i][j];
				// 단지 번호는 1부터 시작
				if(g_idx != 0) group_cnt[g_idx - 1] += 1;
			}
		}
		
		Arrays.sort(group_cnt);
		
		StringBuilder sb = new StringBuilder();
		sb.append(group_idx).append("\n");
		for(int i = 0; i < group_cnt.length; i++) {
			sb.append(group_cnt[i]).append("\n");
		}
		System.out.println(sb);
	}
	
}