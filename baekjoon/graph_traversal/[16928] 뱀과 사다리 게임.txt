import java.util.*;
import java.io.*;

public class Main {
	public static int n, m;
	public static int[] next = new int[101];
	public static int[] dist = new int[101]; // 최단 거리, 즉 주사위 굴린 최소 횟수

	public static void bfs() {
		Queue<Integer> q = new LinkedList<>();
		q.offer(1);
		dist[1] = 0;

		while(!q.isEmpty()) {
			int x = q.poll();

			// 주사위 굴리기
			for(int i = 1; i <= 6; i++) {
				int y = x + i;
				
				if(y > 100) continue;

				// 다음 칸에 뱀 또는 사다리가 있다면
				if(next[y] != 0) y = next[y];
				
				// 다음 이동 칸이 방문하지 않은 칸이라면
				if(dist[y] == -1) {
					q.offer(y);
					dist[y] = dist[x] + 1;
				}
			}
		}

	}

	public static void main(String args[]) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());	
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());		

		for(int i = 0; i < n+m; i++) {
			st = new StringTokenizer(br.readLine());
			int x = Integer.parseInt(st.nextToken());
			int y = Integer.parseInt(st.nextToken());

			next[x] = y;
		}

		Arrays.fill(dist, -1);
		
		bfs();

		System.out.println(dist[100]);
	}
}