import java.util.*;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int[] arr = new int[n];
		for(int i = 0; i < n; i++) {
			arr[i] = sc.nextInt();
		}
		
		// i로 끝나는 증가하는 부분 수열의 길이
		int[] dp1 = new int[n];
		for(int i = 0; i < n; i++) {
			dp1[i] = 1;
			for(int j = 0; j < i; j++) {
				int tmp = dp1[j] + 1;
				if(arr[j] < arr[i] && dp1[i] < tmp)
					dp1[i] = tmp;
			}
		}
		
		// i로 시작하는 감소하는 부분 수열의 길이
		int[] dp2 = new int[n];
		for(int i = n-1; i >= 0; i--) {
			dp2[i] = 1;
			for(int j = i+1; j < n; j++) {
				int tmp = dp2[j] + 1;
				if(arr[i] > arr[j] && dp2[i] < tmp)
					dp2[i] = tmp;
			}
		}
		
		// 가장 긴 바이토닉 부분 수열의 길이
		int ans = 0;
		for(int i = 0; i < n; i++) {
			int tmp = dp1[i] + dp2[i] - 1;
			
			if(ans < tmp) ans = tmp;
		}
		System.out.println(ans);
	}
}