import java.util.*;
import java.io.*;

public class Main {
	public static int n, m, ans;
	public static boolean[] broken = new boolean[10];
	
	// 누를 수 있는 채널인 경우 채널의 길이를, 누를 수 없는 경우 0을 리턴
	public static int getLengthOfCh(int ch) {
		String str_ch = String.valueOf(ch);
		
		for(int i = 0; i < str_ch.length(); i++) {
			if(broken[str_ch.charAt(i) - '0']) return 0;
		}
		return str_ch.length();
	}
	
    public static void main(String args[]) throws IOException {
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	n = Integer.parseInt(br.readLine());
    	m = Integer.parseInt(br.readLine());
    	
    	// 고장난 버튼이 없는 경우
    	// A(채널 n을 누르는 경우) vs B(현재 채널 100에서 +,-만 누르는 경우)
    	// ex) n = 99일 때, A(2) vs B(1) 로 B의 경우인 1이 정답
    	if(m == 0) {
    		int a = String.valueOf(n).length(); // 채널 n의 길이
    		int b = Math.abs(n - 100); // 현재 채널에서 + 또는 -를 누를 횟수
    		System.out.println(Math.min(a, b));
    		System.exit(0);
    	}
    
    	// 고장난 버튼이 있는 경우에만 주어짐
    	StringTokenizer st = new StringTokenizer(br.readLine());
    	for(int i = 0; i < m; i++) {
    		int num = Integer.parseInt(st.nextToken());
    		broken[num] = true;
    	}
    	
    	// 버튼이 다 고장난 경우 + 또는 -만 눌러야 하므로 그 횟수를 ans의 초기값으로 지정
    	ans = Math.abs(n - 100);
    	
    	for(int ch = 0; ch <= 1000000; ch++) {
    		int ch_len = getLengthOfCh(ch); // 누를 수 있는 채널의 길이
    		
    		if(ch_len == 0) continue; // 누를 수 없는 채널인 경우 넘어가기
    		
    		int cnt_sign = Math.abs(n - ch); // 누를 수 있는 채널을 누른 후 +, -를 누르는 횟수
    		int cnt_push = ch_len + cnt_sign; // 누르는 버튼의 총 횟수
    		
    		if(ans > cnt_push) ans = cnt_push;
    	}
    	
    	System.out.println(ans);
    }
}