import java.util.*;

class Node {
	int x;
	int y;
	
	Node(int x, int y) {
		this.x = x;
		this.y = y;
	}
}

public class Main {
	public static int n, m;
	public static int[][] board;
	public static int[] dx = {-1, 1, 0, 0};
	public static int[] dy = {0, 0, -1, 1};
	
	public static void bfs(int x, int y) {
		Queue<Node> q = new LinkedList<>();
		q.offer(new Node(x, y));
		
		while(!q.isEmpty()) {
			Node now = q.poll();
			x = now.x;
			y = now.y;
			
			for(int i = 0; i < 4; i++) {
				int nx = x + dx[i];
				int ny = y + dy[i];
				
				if(nx < 0 || nx >= n || ny < 0 || ny >= m) continue;
				
				if(board[nx][ny] == 1) {
					board[nx][ny] = board[x][y] + 1;
					q.offer(new Node(nx, ny));
				}
			}
		}
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		m = sc.nextInt();
		board = new int[n][m];

		for(int i = 0; i < n; i++) {
			String line = sc.next();
			for(int j = 0; j < m; j++) {
				board[i][j] = line.charAt(j) - '0';
			}
		}
		
		bfs(0, 0);
		System.out.println(board[n-1][m-1]);
	}

}