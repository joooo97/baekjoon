import java.util.*;

class Node {
	int x; // 점 위치
	int t; // 걸린 시간
	
	Node(int x, int t) {
		this.x = x;
		this.t = t;
	}
}

public class Main {
	
    public static void main(String args[]) {
    	Scanner sc = new Scanner(System.in);
    	int n = sc.nextInt(); // 수빈 위치
    	int k = sc.nextInt(); // 동생 위치
    	boolean[] visited = new boolean[100001]; // 점 방문처리 배열
    	
    	ArrayDeque<Node> deque = new ArrayDeque<>();
    	// 시작 점에 대해 처리
    	deque.offer(new Node(n, 0));
    	visited[n] = true;
    	
    	while(!deque.isEmpty()) {
    		Node now = deque.poll();
    		int x = now.x;
    		int t = now.t;
    		
    		// 동생 위치에 도달했다면 종료
    		if(x == k) {
    			System.out.println(t);
    			return;
    		}
    		
    		// 0초 후의 경우에 대해 처리
    		if(x * 2 <= 100000 && !visited[x * 2]) {
    			deque.offerFirst(new Node(x * 2, t));
    			visited[x * 2] = true;
    		}
    		
    		// 1초 후의 경우에 대해 처리
    		if(x - 1 >= 0 && !visited[x - 1]) {
    			deque.offerLast(new Node(x - 1, t + 1));
    			visited[x - 1] = true;
    		}
    		if(x + 1 <= 100000 && !visited[x + 1]) {
    			deque.offerLast(new Node(x + 1, t + 1));
    			visited[x + 1] = true;
    		}
    	}
    }
}